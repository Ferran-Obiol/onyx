<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

  <import resource="property-configurer.xml" />

  <bean name="onyxApplicationConfiguration" class="org.obiba.onyx.webapp.OnyxApplicationConfiguration" primary="true">
    <property name="configurationType" value="${org.obiba.onyx.webapp.configurationType}" />
    <property name="version" ref="version" />
  </bean>

  <!-- Import Hibernate's context -->
  <import resource="hibernate.xml" />

  <!-- Import Onyx's context -->
  <import resource="classpath:META-INF/spring/onyx-core/context.xml" />

  <!-- Import Data export pipeline -->
  <import resource="data-export.xml" />
  
  <!-- Import Participant reader context -->
  <import resource="participant-reader.xml" />

  <!--
    A static stage ordering strategy. Override this by implementing Comparable<Stage> and defining the stageOrderingStrategy bean to point to your
    implementation
  -->
  <bean id="stageOrderingStrategy" class="org.obiba.onyx.engine.StaticStageOrderingStrategy">
    <property name="stageOrdering" value="${org.obiba.onyx.engine.staticStageOrder}" />
  </bean>

  <!-- Converts a variable to a path representing its unique identification -->
  <bean id="variablePathNamingStrategy" class="org.obiba.onyx.engine.variable.impl.DefaultVariablePathNamingStrategy"/>

  <!-- The class that reads the participant Excel sheet. Override to fit your needs. -->
  <bean id="participantReader" class="org.obiba.onyx.core.etl.participant.impl.DefaultParticipantExcelReader" scope="prototype">
    <property name="participantMetadata" ref="participantMetadata" />
    <property name="sheetNumber" value="${org.obiba.onyx.participantReader.sheetNumber}" />
    <property name="headerRowNumber" value="${org.obiba.onyx.participantReader.headerRowNumber}" />
    <property name="firstDataRowNumber" value="${org.obiba.onyx.participantReader.firstDataRowNumber}" />
    <property name="columnToAttribute" value="${org.obiba.onyx.participantReader.columnToAttribute}" />
  </bean>

  <!-- Implementation of UserService. Should not need to be overriden. -->
  <bean id="userSessionService" class="org.obiba.onyx.webapp.service.impl.UserSessionServiceImpl" init-method="initialize" scope="session">
    <!-- NOTE: Uncomment declaration below if this service is injected into a singleton bean. -->
    <!-- <aop:scoped-proxy /> -->

    <property name="datePattern" value="${org.obiba.onyx.dateFormat}" />
    <property name="dateTimePattern" value="${org.obiba.onyx.dateTimeFormat}" />
    <property name="userService" ref="userService" />
  </bean>

  <!-- Defines Onyx's MessageSource bean. extraBasenames can be used to load other ResourceBundles as required. -->
  <bean name="messageSource" class="org.obiba.onyx.spring.context.OnyxMessageSourceFactoryBean">
    <property name="onyxConfigPath" value="${org.obiba.onyx.config.path}" />
  </bean>

  <!-- Used only during development -->
  <bean id="testDatabaseSeed" class="org.obiba.onyx.webapp.seed.TestDatabaseSeed" scope="singleton">
    <property name="resourcePatterns">
      <list>
        <value>classpath:/appConfiguration.xml</value>
      </list>
    </property>
    <property name="developmentSeed" value="true" />
    <property name="persistenceManager" ref="persistenceManager" />
  </bean>

  <bean id="onyxApplicationStartupListener" class="org.obiba.wicket.util.seed.DatabaseSeedWebApplicationStartupListener" scope="singleton">
    <property name="databaseSeeds">
      <list>
        <ref bean="testDatabaseSeed" />
      </list>
    </property>
  </bean>

</beans>
